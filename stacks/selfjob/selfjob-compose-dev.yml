version: "3"
volumes:
  elastic:
    driver: local
  redis:
    driver: local
  logs:
    driver: local
networks:
  webnet:
services:
  nginx:
    image: nginx:latest
    deploy:
      restart_policy:
        condition: on-failure
    volumes:
     - /var/www:/var/www
     - logs:/var/logs
     - ./nginx.conf/tools.conf:/etc/nginx/conf.d/tools.conf
     - ./nginx.conf/app-${DEPLOY_TYPE}.conf:/etc/nginx/conf.d/app.conf
    ports:
     - 80:80
     - 443:443
    networks:
     - webnet
  php:
    image: ${CODEHEURES_PHP_IMAGE}
    deploy:
      restart_policy:
        condition: on-failure
    volumes:
     - /var/www:/var/www
    networks:
     - webnet
  redis:
      image: redis:latest
      deploy:
        restart_policy:
          condition: on-failure
      volumes:
       - redis:/data
      ports:
       - "6379:6379"
      networks:
       - webnet
  mariadb:
    image: mariadb
    deploy:
      restart_policy:
        condition: on-failure
    environment:
      MYSQL_ROOT_PASSWORD: root
    volumes:
     - /var/lib/mysql:/var/lib/mysql
    networks:
     - webnet
  frontv2:
    image: ${CODEHEURES_NPM_IMAGE}
    volumes:
     - /var/www/self-job/frontv2:/var/www/self-job/frontv2
    working_dir: /var/www/self-job/frontv2
    command: npm run dev
    extra_hosts:
      - "${HOST_API}: ${CODEHEURE_DOCKER_HOST_IP}"
    networks:
     - webnet
  laravel_echo:
      image: ${CODEHEURES_LARAVEL_ECHO_IMAGE}
      volumes:
       - /var/www/self-job/api:/var/www/self-job/api
      working_dir: /var/www/self-job/api
      command: laravel-echo-server start
      extra_hosts:
       - "${HOST_API}: ${CODEHEURE_DOCKER_HOST_IP}"
      networks:
       - webnet
  elasticsearch:
    image: ${CODEHEURES_ELASTICSEARCH_IMAGE}
    environment:
      - cluster.name=docker-cluster
      - bootstrap.memory_lock=true
      - "ES_JAVA_OPTS=-Xms512m -Xmx512m"
    volumes:
      - elastic:/usr/share/elasticsearch/data
    ports:
      - 9200:9200
      - 9300:9300
    networks:
      - webnet
