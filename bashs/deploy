#!/bin/bash

## Import names of images to use in stack deploy
source $(dirname "$BASH_SOURCE[0]")/images_names

## Get IP of docker0 to share
export CODEHEURE_DOCKER_HOST_IP=`ip -4 addr show scope global dev docker0 | grep inet | awk '{print \$2}' | cut -d / -f 1`

## Global init configuration
REBUILD=0
RESTART=0
STACK_NAME=0
DEPLOY_TYPE='dev'

## Adapt configuration by arguments
while test $# -gt 0
do
    case "$1" in
        --rebuild) REBUILD=1 && RESTART=1
            ;;
        --restart) RESTART=1
            ;;
        --prod) DEPLOY_TYPE='prod'
	        ;;
        --*) echo "bad option $1"
            ;;
        *) STACK_NAME=$1
            ;;
    esac
    shift
done

if [[ "$STACK_NAME" == 0 ]]; then
  echo ERROR: Bad stack name ${STACK_NAME} 1>&2
  exit 1;
fi

## Name of files
file=${STACK_NAME}-compose-${DEPLOY_TYPE}.yml

## Echo configuration
echo "stackname: ${STACK_NAME}"
echo "rebuild: ${REBUILD}"
echo "restart: ${RESTART}"
echo "deploy type: ${DEPLOY_TYPE}"
echo "launch command: docker stack deploy -c ${CODEHEURES_DOCKER_CONFIG_ROOT}/stacks/${STACK_NAME}/${file} ${STACK_NAME}"

if [[ "$REBUILD" == 1 ]]; then
  source ${CODEHEURES_DOCKER_CONFIG_ROOT}/bashs/builds
fi

if [[ "$RESTART" == 1 ]]; then
  docker stack rm ${STACK_NAME} && sleep 10
fi

if [[ "$DEPLOY_TYPE" == "dev" ]]; then
    HOST_FRONT="$STACK_NAME.test"
    HOST_API="api.$STACK_NAME.test"
    HOST_ECHO="echo.$STACK_NAME.test"
fi

if [[ "$DEPLOY_TYPE" == "prod" ]]; then
    HOST_FRONT="$STACK_NAME.fr"
    HOST_API="api.$STACK_NAME.fr"
    HOST_ECHO="echo.$STACK_NAME.fr"
fi

export DEPLOY_TYPE
export HOST_FRONT
export HOST_API
export HOST_ECHO
docker stack deploy -c ${CODEHEURES_DOCKER_CONFIG_ROOT}/stacks/${STACK_NAME}/${file} ${STACK_NAME}
